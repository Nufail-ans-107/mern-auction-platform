name: Deploy to AWS EC2 using Terraform

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repo
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6

    # Step 3: Terraform Init
    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    # Step 4: Terraform Validate
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate

    # Step 5: Terraform Plan
    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan \
        -var "ami_id=${{ secrets.AMI_ID }}" \
        -var "instance_type=${{ secrets.INSTANCE_TYPE }}" \
        -var "region=${{ secrets.AWS_REGION }}" \
        -var "key_name=${{ secrets.EC2_KEY_NAME }}" \
        -var "my_ip=${{ secrets.MY_IP }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    # Step 6: Terraform Apply
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve \
        -var "ami_id=${{ secrets.AMI_ID }}" \
        -var "instance_type=${{ secrets.INSTANCE_TYPE }}" \
        -var "region=${{ secrets.AWS_REGION }}" \
        -var "key_name=${{ secrets.EC2_KEY_NAME }}" \
        -var "my_ip=${{ secrets.MY_IP }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
